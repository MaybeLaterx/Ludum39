<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>humanTurn = true; 
maxMoves = 0; //1; 
movesLeft = maxMoves;
maxPowers = 1;  
powersLeft = maxPowers; 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// End turn
if (movesLeft == 0 &amp;&amp; powersLeft == 0) { 
    humanTurn = !humanTurn;
    movesLeft = maxMoves; 
    powersLeft = maxPowers; 
    
    if (!instance_exists(oHuman)) room_goto_next(); 
    if (!instance_exists(oShadow1) &amp;&amp; !instance_exists(oShadow2)) room_goto_next();
    
    if (!humanTurn) {
        m = 0; 
        with (oShadow2) {
            instance_create(x,y,oShadow3);
            //other.spreads[other.m,0] = x; 
            //other.spreads[other.m,1] = y;
            //other.m++;
            instance_destroy();
            spread(x,y);
        }
        
        for (i = 0; i &lt; instance_number(oShadow1); i++) {
            inst = instance_find(oShadow1,i);
            with (inst) {   
                if (canGrow(x,y)) { 
                    instance_create(x,y,oShadow2);
                    instance_destroy();
                    other.i--;
                }
            }
        }
        
        //trace(m); 
        //trace(array_length_2d(spreads,0));
        //for (n = 0; n &lt; m; n++) { 
        //    spread(spreads[n,0],spreads[n,1]);
        //}
        
        with (oShadow0) { 
            instance_create(x,y,oShadow1); 
            instance_destroy();
        }
    }
}

/*    
    if (humanTurn) { 
        trace("Finding first human"); 
        humanX = findNextHuman("x",0,0);
        humanY = findNextHuman("y",0,0);
        
        if (humanX == -1 || humanY == -1) room_goto_next();        
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_halign(fa_left);

if (humanTurn) turnText = "Humans' Turn"; 
else turnText = "Shadows' Turn";
draw_text(x,y - 35,turnText);
draw_text(x,y,"Moves remaining: " + string(movesLeft)); 
draw_text(x,y + 35,"Powers remaining: " + string(powersLeft)); 

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
