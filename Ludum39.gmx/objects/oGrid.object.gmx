<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_width/2; 
y = room_height/2; 

size = sprite_get_width(sFloor); 

// LAYOUT MUST BE COMPLETELY ENCLOSED BY X'S
layout = 
"XXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXX000XXXXXXXXXX
XXXXXXXX0000000XXXXXXX
XXXXXXX0000000000XXXXX
XXXXXX00000000000XXXXX
XXX0000000000H0000XXXX
XX00000H00B0000000000X
X0000000000000000000XX
XXXX000000000000000XXX
XXXXX0000000000000XXXX
XXXXXXX000000XXXXXXXXX
XXXXXXXXX000XXXXXXXXXX
XXXXXXXXXXX0XXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXX";

width = getLayoutWidth(layout);
height = getLayoutHeight(layout); 

grid = ds_grid_create(width,height);

for (i = 0; i &lt; height; i++) { 
    for (j = 0; j &lt; width; j++) { 
        pos = 1 + i*(width+2) + j;
        trace(pos);
        thisChar = string_char_at(layout,pos);//1 + height*width + width);
        if (thisChar != "
") { 
            //trace(thisChar);
            //if (thisChar == "O") glyph = "O"; 
            //else glyph = "X";
            ds_grid_set(grid,j,i,thisChar);
        }
    }
}

xOffset = x - width*size/2;
yOffset = y - height*size/2;

// Click coordinates
x1 = xOffset - size/2;
y1 = yOffset - size/2;
x2 = xOffset + width*size - size/2;
y2 = yOffset + height*size - size/2; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Click resolutions
if (i = i) { 

}

cell = ds_grid_get(grid,gx,gy);

// Human turn options
if (humanTurn) { 
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_check_button_pressed(mb_left)) { 
    if (point_in_rectangle(mouse_x,mouse_y,x1,y1,x2,y2)) {
        gx = floor((mouse_x - xOffset + (size/2))/size);
        gy = floor((mouse_y - yOffset + (size/2))/size);
        trace("Clicked cell (" + string(gx) + "," + string(gy) + ")"); 
    }          
}            
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);

for (i = 0; i &lt; height; i++) { 
    for (j = 0; j &lt; width; j++) { 
        tile = ds_grid_get(grid,j,i);
        xx = xOffset + j*size; 
        yy = yOffset + i*size;
        if (tile != "X") draw_sprite(sTile,0,xx,yy); 
        else draw_sprite(sFloor,0,xx,yy);
        
        if (tile == "H") draw_sprite(sHumanIdle,0,xx,yy);
        else if (tile == "B") draw_sprite(sBattery,0,xx,yy);
        else if (tile == "1") draw_sprite(sShadow1,0,xx,yy); 
        else if (tile == "2") draw_sprite(sShadow2,0,xx,yy); 
        else if (tile == "3") draw_sprite(sShadow3,0,xx,yy); 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
