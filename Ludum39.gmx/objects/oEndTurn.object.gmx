<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 2; 
image_yscale = 2; 
txtCol = c_white;

botTurn = false; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>botTurn = ((oController.humanTurn == true &amp;&amp; (global.ai == "humans" || global.ai == "simulation"))    ||  (oController.humanTurn == false &amp;&amp; (global.ai == "shadows" || global.ai == "simulation"))); 


if (position_meeting(mouse_x,mouse_y,id)) { 
    txtCol = make_color_rgb(249, 250, 165);
    if (mouse_check_button_released(mb_left)) { // Click confirmed
        if (!botTurn) { 
            if (oController.turnsElapsed == 1) { 
                if (!global.mutedSfx) audio_play_sound(sndError,0,false);
            } else { 
                if (!global.mutedSfx) audio_play_sound(sndSelect,0,false);
                oController.movesLeft = 0; 
                oController.powersLeft = 0; 
            }
        }
        //txtCol = $f9faa5; 
    } else if (mouse_check_button(mb_left)) {     // Held
        image_index = 2; 
        //txtCol = $f9faa5;
    } else {     // Hovered
        image_index = 1;
        //txtCol = $f9faa5;
    }
} else { // Normal
    image_index = 0; 
    txtCol = $4d4d4d;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!botTurn) { 
    draw_self();
    
    
    draw_set_halign(fa_center); 
    draw_set_valign(fa_middle);
    draw_set_colour(txtCol);
    
    if (room == rStart) { 
        draw_set_font(fntCubicXL);
    } else { 
        draw_set_font(fntCubicL);
        txt = "END TURN";
    }
    
    draw_text(x,y,txt);
}   

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
